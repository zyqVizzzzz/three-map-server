{"version":3,"sources":["reducers/index.ts","reducers/Store.ts","objects/Mall.ts","utils/Themes.ts","objects/Geometry.ts","utils/Common.ts","map/MapLoader.ts","objects/Scaffold.ts","map/index.tsx","App.tsx","index.tsx"],"names":["reducer","state","INITIAL_STATE","action","type","Scene","scene","Orbit","orbit","THREE","camera","window","innerWidth","innerHeight","renderer","antialias","create","StoreContext","useMappedState","useDispatch","Mall","building","floors","root","jsonData","FrontAngle","_curFloorId","mallid","this","data","DefaultFloor","Floors","length","id","i","userData","_id","name","Name","getFloor","fid","floorsJson","remove","position","set","add","height","scale","CommonThemes","width","container","document","body","x","y","z","clearColor","SCALE","FloorThemes","color","opacity","transparent","BuildingThemes","depthTest","WireThemes","linewidth","Geometry","points","MATERIAL","OFFSET","HEIGHT","shape","extrudeSettings","amount","bevelEnabled","geometry","material","mesh","BUILDING_OFFSET","funcArea","depth","category","roomStyle","room","parseInt","Type","Category","createPointsGeometry","wire","Rect","minx","miny","maxx","maxy","tl","br","getBoundingRect","rect","minX","minY","maxX","maxY","MapLoader","url","callback","fetch","then","res","json","result","parse","ParseModel","mall","floor","Outline","_parsePoints","floorObj","setFloor","push","j","FuncAreas","setModel","center","Center","PubPoint","pubPoint","point","setBuilding","rotateOnAxis","Math","PI","pointArray","shapePoints","lastpoint","Scaffold","store","getState","alight","AmbientLight","hlight","HemisphereLight","axesHelper","AxesHelper","OrbitControls","domElement","raycaster","mouse","raycasterList","Map","cameraThemes","sceneThemes","rendererThemes","useCallback","setSize","setClearColor","appendChild","useEffect","_init","loadMap","createScaffold","createListeners","animate","requestAnimationFrame","update","render","fileName","load","showAllFloors","obj","childName","tmp","getChild","children","forEach","child","getChildByName","scaffold","createLight","createAxes","createOrbit","addEventListener","resize","onClickFloor","aspect","updateProjectionMatrix","event","clientX","clientWidth","clientY","clientHeight","setFromCamera","intersects","intersectObjects","switchFloor","getObjectByName","item","object","parent","visible","App","className","createStore","ReactDOM","Provider","value","getElementById"],"mappings":"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","file":"static/js/main.8b2a3ae2.chunk.js","sourcesContent":["import { Action, MapState, INITIAL_STATE } from \"./Store\";\n\nexport default function reducer(\n  state: MapState = INITIAL_STATE,\n  action: Action\n) {\n  switch (action.type) {\n    case \"set scene\": {\n      return {\n        ...state,\n        Scene: action.scene,\n      };\n    }\n    case \"set orbit\": {\n      return {\n        ...state,\n        Orbit: action.orbit,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, Store } from \"redux\";\nimport reducer from \"reducers\";\nimport { create } from \"redux-react-hook\";\nimport * as THREE from \"three\";\n\nexport interface MapState {\n  scene: THREE.Scene;\n  camera: THREE.PerspectiveCamera;\n  renderer: THREE.WebGLRenderer;\n  orbit: any;\n}\n\nexport type Action = {\n  type: \"set scene\";\n  scene: THREE.Scene;\n} | {\n  type: \"set orbit\";\n  orbit: any;\n};\n\nexport function makeStore(): Store<MapState, Action> {\n  return createStore(reducer, INITIAL_STATE);\n}\n\nexport const INITIAL_STATE: MapState = {\n  scene: new THREE.Scene(),\n  camera: new THREE.PerspectiveCamera(\n    25,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    2000\n  ),\n  renderer: new THREE.WebGLRenderer({ antialias: true }),\n  orbit: null\n};\n\nexport const { StoreContext, useDispatch, useMappedState } = create<\n  MapState,\n  Action,\n  Store<MapState, Action>\n>();\n","import * as THREE from 'three'\nclass Mall {\n\n  public building: THREE.Mesh = new THREE.Mesh();\n  public floors: Array<THREE.Object3D> = [];\n  public root: THREE.Object3D = new THREE.Object3D();\n  public jsonData?: any;\n  public FrontAngle: number = 0\n  private _curFloorId: number = 0;\n\n  getBuildingId() {\n    var mallid = this.jsonData.data.building.Mall;\n    return mallid ? mallid : -1;\n  }\n\n  getDefaultFloorId() {\n    return this.jsonData.data.building.DefaultFloor;\n  }\n\n  getFloorNum() {\n    return this.jsonData.data.Floors.length;\n  }\n\n  getFloor(id: number) {\n    for (var i = 0; i < this.floors.length; i++) {\n      if (this.floors[i].userData._id === id) {\n        return this.floors[i];\n      }\n    }\n    return null;\n  }\n\n  getFloorByName(name: string) {\n    for (let i = 0; i < this.floors.length; i++) {\n      if (this.floors[i].userData.Name === name) {\n        return this.floors[i];\n      }\n    }\n    return null;\n  }\n\n  getCurFloor() {\n    return this.getFloor(this._curFloorId);\n  }\n\n  getFloorJson(fid: any) {\n    let floorsJson = this.jsonData.data.Floors;\n    for (let i = 0; i < floorsJson.length; i++) {\n      if (floorsJson[i].userData._id === fid) {\n        return floorsJson[i];\n      }\n    }\n    return null;\n  }\n\n  showFloor(id: any) {\n    this.root.remove(this.building);\n    for (let i = 0; i < this.floors.length; i++) {\n      if (this.floors[i].userData._id === id) {\n        this.floors[i].position.set(0, 0, 0);\n        this.root.add(this.floors[i]);\n      } else {\n        this.root.remove(this.floors[i]);\n      }\n    }\n    this._curFloorId = id;\n  }\n\n  showAllFloors() {\n    this.root.add(this.building);\n    let offset = 4;\n    for (let i = 0; i < this.floors.length; i++) {\n      this.floors[i].position.set(0, 0, i * this.floors[i].userData.height * offset);\n      this.root.add(this.floors[i]);\n    }\n    this.building.scale.set(1, 1, offset);\n    this._curFloorId = 0;\n    return this.root;\n  }\n}\n\nexport default Mall;","export const CommonThemes = {\n  scene: {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    container: document.body,\n  },\n  camera: {\n    position: { x: 0, y: 100, z: 100 },\n  },\n  renderer: {\n    clearColor: \"#F2F2F2\",\n  },\n  SCALE: 0.1\n};\n\nexport const FloorThemes = {\n  MATERIAL: {\n    color: \"#E0E0E0\",\n    opacity: 1,\n    transparent: false,\n  },\n  OFFSET: 5,\n  HEIGHT: 80,\n};\n\nexport const BuildingThemes = {\n  MATERIAL: {\n    color: \"#000000\",\n    opacity: 0.1,\n    transparent: true,\n    depthTest: false,\n  },\n  OFFSET: 600,\n  HEIGHT: 500\n}\n\nexport const WireThemes = {\n  MATERIAL: {\n    color: \"#5C4433\",\n    opacity: 0.5,\n    transparent: true,\n    linewidth: 2,\n  },\n  OFFSET: 30\n}\n\nexport const MaterialThemes = {\n  FLOOR: {\n    color: \"#E0E0E0\",\n    opacity: 1,\n    transparent: false,\n  },\n  BUILDING: {\n    color: \"#000000\",\n    opacity: 0.1,\n    transparent: true,\n    depthTest: false,\n  },\n  WIRE: {\n    color: \"#5C4433\",\n    opacity: 0.5,\n    transparent: true,\n    linewidth: 2,\n  },\n}\n\nexport function room(type: number, category?: number) {\n  let roomStyle;\n  if (!category) {\n    switch (type) {\n      case 100:\n        return {\n          color: \"#F2F2F2\",\n          opacity: 0.8,\n          transparent: true,\n        };\n      case 300: //closed area\n        return {\n          color: \"#AAAAAA\",\n          opacity: 0.7,\n          transparent: true,\n        };\n      case 400: //empty shop\n        return {\n          color: \"#D3D3D3\",\n          opacity: 0.7,\n          transparent: true,\n        };\n      default:\n        break;\n    }\n  }\n\n  switch (category) {\n    case 101: //food\n      roomStyle = {\n        color: \"#1f77b4\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 102: //retail\n      roomStyle = {\n        color: \"#aec7e8\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 103: //toiletry\n      roomStyle = {\n        color: \"#ffbb78\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 104: //parent-child\n      roomStyle = {\n        color: \"#98df8a\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 105: //life services\n      roomStyle = {\n        color: \"#bcbd22\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 106: //education\n      roomStyle = {\n        color: \"#2ca02c\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 107: //life style\n      roomStyle = {\n        color: \"#dbdb8d\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 108: //entertainment\n      roomStyle = {\n        color: \"#EE8A31\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    case 109: //others\n      roomStyle = {\n        color: \"#8c564b\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n    default:\n      roomStyle = {\n        color: \"#c49c94\",\n        opacity: 0.7,\n        transparent: true,\n      };\n      break;\n  }\n  return roomStyle;\n}\n","import * as THREE from \"three\";\nimport {\n  room,\n  FloorThemes,\n  BuildingThemes,\n  WireThemes,\n} from \"utils/Themes\";\nimport {FuncArea} from 'interface/map';\n\n\nexport default class Geometry {\n  setBuilding(points: Array<THREE.Vector2>) {\n    const { MATERIAL, OFFSET, HEIGHT } = BuildingThemes;\n    const shape = new THREE.Shape(points);\n    const extrudeSettings = { amount: HEIGHT, bevelEnabled: false };\n    const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    const material = new THREE.MeshBasicMaterial(MATERIAL);\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.position.set(0, 0, -OFFSET);\n    mesh.name = 'building';\n    return mesh;\n  }\n\n  setFloor(points: Array<THREE.Vector2>) {\n    const { OFFSET: BUILDING_OFFSET } = BuildingThemes;\n    const { MATERIAL, OFFSET } = FloorThemes;\n    const shape = new THREE.Shape(points);\n    const geometry = new THREE.ShapeGeometry(shape);\n    const material = new THREE.MeshBasicMaterial(MATERIAL);\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.position.set(0, 0, -(BUILDING_OFFSET + OFFSET));\n    mesh.name = 'floor'\n\n    return mesh;\n  }\n\n  setModel(points: Array<THREE.Vector2>, funcArea: FuncArea) {\n    const { OFFSET } = BuildingThemes;\n    const shape = new THREE.Shape(points);\n    const extrudeSettings: THREE.ExtrudeGeometryOptions = {\n      depth: 30,\n      bevelEnabled: false,\n    };\n    const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    const material = new THREE.MeshPhongMaterial(\n      room(parseInt(funcArea.Type), funcArea.Category)\n    );\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.position.set(0, 0, -OFFSET);\n    mesh.type = \"solidroom\";\n    return mesh;\n  }\n\n  setWire(points: Array<THREE.Vector2>) {\n    const { OFFSET: BUILDING_OFFSET } = BuildingThemes;\n    const { MATERIAL, OFFSET } = WireThemes;\n    const shape = new THREE.Shape(points);\n    const geometry = shape.createPointsGeometry(0);\n    const material = new THREE.LineBasicMaterial(MATERIAL);\n    const wire = new THREE.Line(geometry, material);\n    wire.position.set(0, 0, -(BUILDING_OFFSET - OFFSET));\n    return wire;\n  }\n}\n","import { Object3D } from \"three\";\nexport class Rect {\n  public tl: Array<number>; //top left point\n  public br: Array<number>; //bottom right point\n  constructor(\n    minx: number = 0,\n    miny: number = 0,\n    maxx: number = 0,\n    maxy: number = 0\n  ) {\n    this.tl = [minx, miny];\n    this.br = [maxx, maxy];\n  }\n}\n\nexport function getBoundingRect(points: Array<number>): Rect {\n  let rect = new Rect();\n  if (points.length < 2) {\n    return rect;\n  }\n  let minX = 9999999,\n    minY = 9999999,\n    maxX = -9999999,\n    maxY = -9999999;\n  for (let i = 0; i < points.length - 1; i += 2) {\n    if (points[i] > maxX) {\n      maxX = points[i];\n    }\n    if (points[i] < minX) {\n      minX = points[i];\n    }\n    if (points[i + 1] > maxY) {\n      maxY = points[i + 1];\n    }\n    if (points[i + 1] < minY) {\n      minY = points[i + 1];\n    }\n  }\n  rect.tl = [minX, minY];\n  rect.br = [maxX, maxY];\n  return rect;\n}\n\nexport function getChildByName(obj: Object3D, childName: string) {\n  let tmp: any = [];\n  const getChild = (obj: Object3D) => {\n    if (obj.name === childName) {\n      tmp.push(obj);\n    }\n    if (!obj.children || obj.children.length <= 0) {\n      return null;\n    }\n    obj.children.forEach((child) => {\n      getChild(child);\n    })\n    return tmp\n  };\n  return getChild(obj)\n}\n","import * as THREE from \"three\";\nimport Mall from \"objects/Mall\";\nimport Geometry from \"objects/Geometry\";\nimport { getBoundingRect } from \"utils/Common\";\nimport { FloorThemes, CommonThemes } from \"utils/Themes\";\n\nclass MapLoader extends THREE.Loader {\n  load(url: string, callback: (mall: Mall) => void) {\n    fetch(url)\n      .then((res) => res.json())\n      .then((json) => {\n        const result = this.parse(json);\n        callback(result);\n      });\n  }\n  parse(json: any) {\n    return new ParseModel(json).parse();\n  }\n}\n\nclass ParseModel {\n  public json: any;\n  public geometry: Geometry;\n  public mall: Mall;\n\n  constructor(json: any) {\n    this.json = json;\n    this.geometry = new Geometry();\n    this.mall = new Mall();\n  }\n  parse() {\n    let building, points;\n    const { HEIGHT } = FloorThemes;\n    const { SCALE } = CommonThemes;\n    //floor geometry\n    for (let i = 0; i < this.json.data.Floors.length; i++) {\n      let floor = this.json.data.Floors[i];\n      floor.rect = getBoundingRect(floor.Outline[0][0]);\n      points = this._parsePoints(floor.Outline[0][0]);\n\n      let floorObj = new THREE.Object3D();\n      floorObj.userData.height = HEIGHT;\n      floorObj.add(this.geometry.setFloor(points));\n      floorObj.userData.points = [];\n      floorObj.userData._id = floor._id;\n      floorObj.name = `floorGroup`;\n      floorObj.position.z = 0\n\n      this.mall.floors.push(floorObj);\n\n      // funcAreas geometry\n      for (let j = 0; j < floor.FuncAreas.length; j++) {\n        let funcArea = floor.FuncAreas[j];\n        funcArea.rect = getBoundingRect(funcArea.Outline[0][0]);\n        points = this._parsePoints(funcArea.Outline[0][0]);\n        floorObj.add(this.geometry.setModel(points, funcArea));\n        // floorObj.add(this.geometry.setWire(points));\n\n        const center = funcArea.Center;\n        floorObj.userData.points.push({\n          name: funcArea.Name,\n          type: funcArea.Type,\n          position: new THREE.Vector3(\n            center[0] * SCALE,\n            HEIGHT * SCALE,\n            -center[1] * SCALE\n          ),\n        });\n      }\n\n      //pubPoint geometry\n      for (let j = 0; j < floor.PubPoint.length; j++) {\n        let pubPoint = floor.PubPoint[j];\n        let point = this._parsePoints(pubPoint.Outline[0][0])[0];\n        floorObj.userData.points.push({\n          name: pubPoint.Name,\n          type: pubPoint.Type,\n          position: new THREE.Vector3(\n            point.x * SCALE,\n            HEIGHT * SCALE,\n            -point.y * SCALE\n          ),\n        });\n      }\n    }\n\n    //building geometry\n    building = this.json.data.building;\n    points = this._parsePoints(building.Outline[0][0]);\n    this.mall.FrontAngle = building.FrontAngle;\n    if (points.length > 0) {\n      this.mall.building = this.geometry.setBuilding(points);\n    }\n\n    //SCALE the mall\n    this.mall.root = new THREE.Object3D();\n    this.mall.root.scale.set(SCALE, SCALE, SCALE);\n    this.mall.root.rotateOnAxis(new THREE.Vector3(1, 0, 0), -Math.PI / 2);\n    this.mall.root.name = \"mall\";\n\n    return this.mall;\n  }\n\n  _parsePoints(pointArray: Array<number>) {\n    let shapePoints = [];\n    for (let i = 0; i < pointArray.length; i += 2) {\n      let point = new THREE.Vector2(pointArray[i], pointArray[i + 1]);\n      if (i > 0) {\n        let lastpoint = shapePoints[shapePoints.length - 1];\n        if (point.x !== lastpoint.x || point.y !== lastpoint.y) {\n          shapePoints.push(point);\n        }\n      } else {\n        shapePoints.push(point);\n      }\n    }\n    return shapePoints;\n  }\n}\n\nexport default MapLoader;\n","import {\n  AmbientLight,\n  HemisphereLight,\n  AxesHelper,\n} from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { store } from \"index\";\n\nexport default class Scaffold {\n  public store = store;\n  public scene = store.getState().scene;\n  public camera = store.getState().camera;\n  public renderer = store.getState().renderer;\n  public orbit = store.getState().orbit;\n  createLight() {\n    let alight = new AmbientLight(0xffffff, 0.2);\n    this.scene.add(alight);\n    let hlight = new HemisphereLight(0xffffff, 0x000000, 0.9);\n    this.scene.add(hlight);\n  }\n  createAxes() {\n    let axesHelper = new AxesHelper(50);\n    this.scene.add(axesHelper);\n  }\n  createOrbit() {\n    this.orbit = new OrbitControls(this.camera, this.renderer.domElement);\n  }\n}\n","import React, { useEffect, useCallback } from \"react\";\nimport { MapState, useMappedState } from \"reducers/Store\";\nimport * as THREE from \"three\";\nimport MapLoader from \"map/MapLoader\";\nimport Scaffold from \"objects/Scaffold\";\nimport { getChildByName } from \"utils/Common\";\nimport { CommonThemes } from \"utils/Themes\";\n\nconst mapUrl = \"./data/map1.json\";\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\nlet raycasterList: any = [];\n\nfunction Map() {\n  const {\n    camera: cameraThemes,\n    scene: sceneThemes,\n    renderer: rendererThemes,\n  } = CommonThemes;\n\n  const { scene, camera, renderer, orbit } = useMappedState(\n    useCallback(\n      (state: MapState) => {\n        const { x, y, z } = cameraThemes.position;\n        const { width, height, container } = sceneThemes;\n        const { clearColor } = rendererThemes;\n        const scene = state.scene;\n        const camera = state.camera;\n        const renderer = state.renderer;\n        const orbit = state.orbit;\n\n        camera.position.set(x, y, z);\n        renderer.setSize(width, height);\n        renderer.setClearColor(clearColor);\n        container.appendChild(renderer.domElement);\n\n        return { scene, camera, renderer, orbit };\n      },\n      [sceneThemes, cameraThemes, rendererThemes]\n    )\n  );\n\n  useEffect(() => {\n    _init();\n  });\n\n  const _init = () => {\n    loadMap(mapUrl);\n    createScaffold();\n    createListeners();\n    animate();\n  };\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    orbit && orbit.update();\n    renderer.render(scene, camera);\n  };\n\n  const loadMap = (fileName: string) => {\n    const loader = new MapLoader();\n    loader.load(fileName, (mall) => {\n      scene.add(mall.root);\n      scene.userData.mall = mall;\n      mall.showAllFloors();\n      raycasterList = getChildByName(mall.root, \"floor\");\n    });\n  };\n\n  const createScaffold = () => {\n    const scaffold = new Scaffold();\n    scaffold.createLight();\n    scaffold.createAxes();\n    scaffold.createOrbit();\n  };\n\n  const createListeners = () => {\n    window.addEventListener(\"resize\", resize);\n    window.addEventListener(\"click\", onClickFloor);\n  };\n\n  const resize = () => {\n    const { width, height } = sceneThemes;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(width, height);\n  };\n\n  const onClickFloor = (event: any) => {\n    const { container } = sceneThemes;\n    mouse.x = (event.clientX / container.clientWidth) * 2 - 1;\n    mouse.y = -(event.clientY / container.clientHeight) * 2 + 1;\n    raycaster.setFromCamera(mouse, camera);\n    if (raycasterList.length) {\n      let intersects = raycaster.intersectObjects(raycasterList);\n      if (intersects.length) {\n        switchFloor(intersects)\n      }\n    }\n  };\n\n  const switchFloor = (intersects: Array<any>) => {\n    //@ts-ignore\n    scene.getObjectByName(\"mall\").children.forEach((item: any) => {\n      if (\n        item.userData._id !== (intersects[0].object as any).parent.userData._id\n      ) {\n        item.visible = false;\n      } else {\n        item.visible = true;\n      }\n    });\n  };\n\n  return <div id=\"canvas\" />;\n}\n\nexport default Map;\n","import React from \"react\";\nimport Map from \"map\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StoreContext, makeStore } from \"reducers/Store\";\nimport App from \"./App\";\n\nimport \"style/normalized.css\";\n\nexport const store = makeStore();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <App />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}